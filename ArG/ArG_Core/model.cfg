class CfgSkeletons
{
	class Default
	{
		isDiscrete = 1;
		skeletonInherit = "";
		skeletonBones[] = {};
	};
	class JSDF_Wep_skeleton	: Default
	{
		isDiscrete = 0;
		skeletonInherit = "Default";
		skeletonBones[]=
		{
			"dustcover",			"",
			"ejectcover",			"",
			"zasleh",			"",
			"barrel",			"",
			"bolt",				"",
			"bolto",			"",
			"slide",			"",
			"slide_stop",			"",
			"hood",				"",
			"hood_stop",			"hood",
			"hood_latch",			"hood",
			"trigger",			"",
			"hammer",			"",
			"charge",			"",
			"charges",			"",
			"magazine",			"",
			"ammo",				"",
			"ammo_belt",			"ammo",
			"ammo_belt_bottom",		"ammo_belt",

			"bullet_200",			"ammo_belt",
			"bullet_199",			"ammo_belt",
			"bullet_198",			"ammo_belt",
			"bullet_197",			"ammo_belt",
			"bullet_196",			"ammo_belt",
			"bullet_195",			"ammo_belt",
			"bullet_194",			"ammo_belt",
			"bullet_193",			"ammo_belt_bottom",
			"bullet_192",			"ammo_belt_bottom",
			"bullet_191",			"ammo_belt_bottom",
			"bullet_190",			"ammo_belt_bottom",

			"bullet_100",			"ammo_belt",
			"bullet_099",			"ammo_belt",
			"bullet_098",			"ammo_belt",
			"bullet_097",			"ammo_belt",
			"bullet_096",			"ammo_belt",
			"bullet_095",			"ammo_belt_bottom",
			"bullet_094",			"ammo_belt_bottom",
			"bullet_093",			"ammo_belt_bottom",
			"bullet_092",			"ammo_belt_bottom",
			"bullet_091",			"ammo_belt_bottom",
			"bullet_090",			"ammo_belt_bottom",

			"Sighthold",			"",
			"stock",			"",
			"stockF",			"",
		};
	};
	class JSDF_VehW_skeleton	: Default
	{
		isDiscrete = 0;
		skeletonInherit = "Default";
		skeletonBones[]=
		{
			"turret",			"",
			"turret_gun",			"turret",
			"zasleh",			"turret_gun",
		};
	};
};

class Rotation
{
	type 		= "rotation";
	source 		= "";
	selection 	= "";
	axis 		= "";
	memory 		=  1;
	minValue 	= 0.0;
	maxValue 	= 1.0;
	minPhase 	= 0.0;
	maxPhase	= 1.0;
	angle0 		= 0.0;
	angle1 		= 1.0;
//				angle1 		= "rad 59";
};
class Rotation_A	: Rotation
{
	minValue	=-1.0;
	maxValue	= 1.0;
	minPhase 	=-1.0;
	maxPhase	= 1.0;
};
class Translation
{
	type		="translation";
	source		="";
	selection	="";
	axis		="";
	sourceAddress = "";
	memory		=0;
	animPeriod	=0;
	minValue	=0.0;
	maxValue	=1.0;
	minPhase 	=0.0;
	maxPhase	=1.0;
	offset0		=0.0;
	offset1		=1.0;
};
class mainTurret	: Rotation
{
	sourceAddress 	= "loop";
	source		= "mainTurret";
	selection	= "turret";
	axis		= "turret_axis";
	minValue	= "rad -360";
	maxValue	= "rad +360";
	angle0		= "rad -360";
	angle1		= "rad +360";
};
class mainGun		: Rotation
{
	source		="mainGun";
	selection	="turret_gun";
	axis		="turret_gun_axis";
	minValue	="rad -360";
	maxValue	="rad +360";
	angle0		="rad -360";
	angle1		="rad +360";
};
class mainGun_recoil	: Translation
{
	source		= "mainGun_recoil";
	sourceAddress	="loop";
	selection	= "turret_gun_barrel";
	axis		= "turret_gun_barrel_axis";
	offset0		= 0;
	offset1		= 1;
};
class hide
{
	type		="hide";
	source		="";
	selection	="";
	minValue	=0.0;
	maxValue	=1.0;
	minPhase 	=0.0;
	maxPhase	=0.0;
	hideValue	=1.0;
};
////////////////////////////////////////////////////////////////////////////////////////
 			class MuzzleFlashROT
 			{
 				type		="rotationX";
 				source		="ammoRandom";
 				sourceAddress	="loop";
 				selection	="zasleh";
 				axis		="muzzle_pos";
 				centerFirstVertex=false;
 				minValue	=0;
 				maxValue	=4;
 				angle0		="rad 0";
 				angle1		="rad 360";
 			};
			class selector		: rotation
			{
				source		="weaponMode";
				selection	="selector";
				axis		="selector_axis";
				maxValue 	= 0.5;
			};
			class trigger		: rotation
			{
				source		="reload";
				selection	="trigger";
				axis		="trigger_axis";
				maxValue	= 0.5;
			};
			class hammer		: trigger
			{
				selection	="hammer";
				axis		="hammer_axis";
			};
			class cylinder		: trigger
			{
				source		="revolving";
				selection	="cylinder";
				axis		="cylinder_axis";
			};

			class openbolt		: Translation
			{
				source		="reload";
				selection	="bolto";
				axis		="bolto_axis";
				offset0		= 1;
				offset1		= 0;
			};
			class bolt		: Translation
			{
				source		="reload";
				selection	="bolt";
				axis		="bolt_axis";
			};
			class bolt_end		: bolt
			{
				source		="isEmpty";
				offset1		=0.8;
			};
			class bolt_stop		: rotation
			{
				source		="isEmpty";
				selection	="bolt_stop";
				axis		="bolt_stop_axis";
				angle0		= 0.0;
				angle1		= 0.05;
			};
			class slide		: Translation
			{
				source		="reload";
				selection	="slide";
				axis		="slide_axis";
			};
			class slide_end		: Translation
			{
				source		="isEmpty";
				selection	="slide";
				axis		="slide_axis";
				offset1		=0.8;
			};
			class slide_stop	: rotation
			{
				source		="isEmpty";
				selection	="slide_stop";
				axis		="slide_stop_axis";
				angle0		= 0.0;
				angle1		= 0.05;
			};
			class hood_open		: rotation
			{
				source		="reloadMagazine";
				selection	="hood";
				axis		="hood_axis";
				minValue	= 0.0;
				maxValue	= 0.05;
			};
			class hood_close	: hood_open
			{
				minValue	= 0.75;
				maxValue	= 0.80;
				angle0 		= 0;
				angle1 		=-1;
			};
			class hood_latch	: slide
			{
				selection	="hood_latch";
				axis		="hood_latch_axis";
			};
			class bullet_hide	: hide
			{
				SourceAddress 	="mirror";
				source		="revolving";
				minValue	=-1;
				maxValue	= 0;
				minPhase	=-1;
				maxPhase	= 0;
			};
			class ammo_belt		: rotation
			{
				source		="reload";
				selection	="ammo_belt";
				axis		="ammo_belt_axis";
				memory		=1;
				sourceAddress	="loop";
				minValue	=0.000;
				maxValue	=0.003;
				angle0		=0.175;
				angle1		=0.000;
			};
			class ammo_belt_bottom	: ammo_belt
			{
				selection	="ammo_belt_bottom";
				axis		="ammo_belt_bottom_axis";
			};
			class ammo_hide		: hide
			{
				source		="isEmpty";
				selection	="ammo";
				hideValue	=1.0;
			};
			class rocket_hide	: ammo_hide
			{
				source		="isEmpty";
				selection	="rocket";
			};
			class missile_hide	: ammo_hide
			{
				source		="isEmpty";
				selection	="missile";
			};
			class magazine_hide	: hide
			{
				source		="reloadMagazine";
				selection	="magazine";
				hideValue	= 0.2;
				unhideValue 	= 0.6;
			};
			class no_magazine	: hide
			{
				source		="hasMagazine";
				selection	="magazine";
				hideValue	= 0.5;
				unhideValue 	=-1.0;
			};
			class magazine_rel_mov1	: Translation
			{
				source 		= "reloadMagazine";
				selection 	= "magazine";
				axis 		= "magazine_axis";
				minValue 	= 0.15;
				maxValue 	= 0.17;
			};
			class magazine_rel_mov2: magazine_rel_mov1
			{
				minValue 	= 0.55;
				maxValue 	= 0.65;
				offset1 	=-1;
			};

			class charge		: rotation
			{
				source		="reloadMagazine";
				selection	="charge";
				axis		="charge_axis";
				minValue	=0.6;
				maxValue	=0.8;
			};
			class charger		: charge
			{
				minValue	= 0.9;
				maxValue	= 0.95;
				angle0		= 0;
				angle1		=-1;
			};
			class charges		: translation
			{
				source		="reloadMagazine";
				selection	="charges";
				axis		="charges_axis";
				minValue	=0.7;
				maxValue	=0.75;
			};
			class chargesr		: charges
			{
				minValue	=0.75;
				maxValue	=0.76;
				offset0		= 0;
				offset1		=-1;
			};
 			class Sighthold		: rotation
 			{
 				source 		= "hasOptics";
 				selection 	= "Sighthold";
 				axis 		= "Sighthold_axis";
 				angle1 		= "rad 90";
 			};
			class stock		: translation
			{
				source		="isSelected";
				selection	="stock";
				axis		="stock_axis";
				offset0		= 1;
				offset1		= 0;
			};
			class stockF		: rotation
			{
				source		="isSelected";
				selection	="stockF";
				axis		="stockF_axis";
				minValue 	=-1;
				angle0 		="rad 360";
				angle1 		="rad   0";
			};
			class bipod		: rotation
			{
				source		="bipod";
				selection	="bipod";
				axis		="bipod_axis";
				angle1		="rad 90";
			};
			class bipod_slide	: Translation
			{
				source		="bipod_length";
				selection	="bipod_slide";
				axis		="bipod_slide_axis";
			};
			class p_bipod		: rotation
			{
				sourceAddress	= clamp;
				source		="bipod_legs";
				selection	="bipod";
				axis		="bipod_axis";
				angle1		="rad 90";
			};
			class p_bipod_slide	: Translation
			{
				source		="bipod_legs_length";
				selection	="bipod_slide";
				axis		="bipod_slide_axis";
				memory		=1;
				minValue	=0.0;
				maxValue	=0.1;
				offset0		=0.0;
				offset1		=1.0;
			};
			class zeroing1		: rotation
			{
				source		="zeroing1";
				selection	="zeroing1";
				axis		="zeroing1_axis";
			};

			class Protector		: hide
			{
				source		="isSelected";
				selection	="protector";
			};
////////////////////////////////////////////////////////////////////////////////////////
class CfgModels
{
	class Default
	{
		sectionsInherit	= "";
		sections[] 	= {};
		skeletonName 	= "";
	};
	class JSDF_Wep_Model	: Default
	{
		sections[]=
		{
			"zasleh","magazine","ammo",
		};
		sectionsInherit	="Default";
		skeletonName	="JSDF_Wep_skeleton";
		class Animations
		{
			class muzzleFlashROT		: muzzleFlashROT	{};
			class trigger			: trigger		{};
			class openbolt			: openbolt		{};
			class bolt			: bolt			{};
			class bolt_end			: bolt_end		{};
			class bolt_stop			: bolt_stop		{};
			class slide			: slide			{};
			class slide_end			: slide_end		{};
			class slide_stop		: slide_stop		{};
			class hood_open			: hood_open		{};
			class hood_close		: hood_close		{};
			class hood_latch		: hood_latch		{};
			class ammo_hide			: ammo_hide		{};
			class rocket_hide		: rocket_hide		{};
			class missile_hide		: missile_hide		{};
			class ammo_belt			: ammo_belt		{};
			class ammo_belt_bottom		: ammo_belt_bottom	{};
			class magazine_hide		: magazine_hide		{};
			class magazine_rel_mov1		: magazine_rel_mov1	{};
			class magazine_rel_mov2		: magazine_rel_mov2	{};
			class no_magazine		: no_magazine		{};
			class charge			: charge		{};
			class charger			: charger		{};
			class charges			: charges		{};
			class chargesr			: chargesr		{};
			class Sighthold			: Sighthold		{};
			class stock			: stock			{};
			class stockF			: stockF		{};
			class bipod			: bipod			{};
			class bipod_slide		: bipod_slide		{};
			class bipodl_slide		: bipod_slide		{selection="bipodl_slide";	axis="bipodl_slide_axis";			};
			class bipodr_slide		: bipod_slide		{selection="bipodr_slide";	axis="bipodr_slide_axis";			};
			class Protector			: Protector		{};

			class mainTurret		: mainTurret		{};
			class mainGun			: mainGun		{};
			class mainGun_recoil		: mainGun_recoil	{};
		};
	};
};
